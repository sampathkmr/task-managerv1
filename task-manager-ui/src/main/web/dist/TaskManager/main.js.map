{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/addtask/addtask.component.css","webpack:///./src/app/addtask/addtask.component.html","webpack:///./src/app/addtask/addtask.component.ts","webpack:///./src/app/addtask/task.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/edittask/edittask.component.html","webpack:///./src/app/edittask/edittask.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/page-not-found/page-not-found.component.html","webpack:///./src/app/page-not-found/page-not-found.component.ts","webpack:///./src/app/services/static.service.ts","webpack:///./src/app/services/task.service.ts","webpack:///./src/app/viewtask/task.pipe.ts","webpack:///./src/app/viewtask/viewtask.component.html","webpack:///./src/app/viewtask/viewtask.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"input[type=range] {\\r\\ndisplay: block; \\r\\n width: 33%; \\r\\n}\\r\\n.selected-value {\\r\\n    float: right;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-6 col-sm-offset-3\\\">\\n  <form class=\\\"form-horizontal\\\" #taskForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"task\\\" class=\\\"control-label col-sm-3\\\" >Task</label>\\n      <input class=\\\"col-sm-9\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.task\\\"  name=\\\"task\\\" required minlength=\\\"4\\\" >\\n    </div>\\n    <div class=\\\"form-group\\\">\\n        <label for=\\\"priority\\\"  class=\\\"control-label col-sm-3\\\" >Priority</label>\\n        <input class=\\\"col-sm-9\\\" type=\\\"range\\\" [(ngModel)]=\\\"task.priority\\\" title=\\\"{{task.priority}}\\\" name=\\\"priority\\\" id=\\\"priority\\\" required>\\n        <span class=\\\"selected-value\\\">{{task.priority}}</span>\\n       \\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"parentTask\\\" class=\\\"control-label col-sm-3\\\" >Parent Task</label>\\n      <input class=\\\"col-sm-9\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.parentTask\\\"   name=\\\"parentTask\\\" id=\\\"parentTask\\\" required>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"startDate\\\" class=\\\"control-label col-sm-3\\\" >Start Date</label>\\n            <input class=\\\"col-sm-9\\\" type=\\\"date\\\" [(ngModel)]=\\\"task.startDate\\\"   name=\\\"startDate\\\" id=\\\"startDate\\\" required>\\n   </div>\\n   <div class=\\\"form-group\\\">\\n      <label for=\\\"endDate\\\" class=\\\"control-label col-sm-3\\\" >End Date</label>\\n      <input class=\\\"col-sm-9\\\" type=\\\"date\\\" [(ngModel)]=\\\"task.endDate\\\"   name=\\\"endDate\\\" id=\\\"endDate\\\" (blur)=\\\"compareTwoDates()\\\" required>\\n      <div *ngIf=\\\"error.isError\\\" class=\\\"alert alert-danger col-sm-offset-3\\\">\\n        {{ error.errorMessage }}\\n      </div>\\n    </div>  \\n    <div class=\\\"form-group\\\">\\n      <div class=\\\"col-sm-9 col-sm-offset-3 mt-3\\\">\\n        <button type=\\\"submit\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"addTask(taskForm.value)\\\" [disabled]=\\\"taskForm.invalid\\\">Add Task</button>&nbsp;&nbsp;\\n        <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\">Reset</button>\\n      </div>\\n    </div>\\n  </form>\\n  </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Pipe, PipeTransform } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport {TaskService} from '../services/task.service';\nimport { Task } from './task';\nimport { Router } from '@angular/router';\n \n\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.css']\n})\nexport class AddtaskComponent implements OnInit {\n  task: Task = new Task();\n   \n  constructor(private router: Router,private taskervice: TaskService) {\n     \n   }\n   error:any={isError:false,errorMessage:''};\n   \n   compareTwoDates(){\n     this.error={isError:false,errorMessage:''};\n      if(new Date(this.task.endDate)<new Date(this.task.startDate)){\n         this.error={isError:true,errorMessage:'End Date can not before start date'};\n      }\n   }\n\n   addTask(): void {\n\n    console.log(this.task.task);\n    this.task.status=\"active\";\n    console.log(this.task.status);\n   this.taskervice.addTask(this.task)\n        .subscribe( data => {\n        });\n        this.router.navigate(['/viewtask']);\n\n  };\n\n  /*addTask(task, parentTask,startDate, endDate) {\n    this.taskervice.addTask(task,parentTask,startDate,endDate);\n  }*/\n  ngOnInit() {\n     \n  }\n  formatLabel(value: number | null) {\n    if (!value) {\n      return 0;\n    }\n\n    if (value >= 1000) {\n      return Math.round(value / 1000) + 'k';\n    }\n\n    return value;\n  }\n}\n","export class Task {\r\n   \r\n   \r\n    public task: string;\r\n    public priority: number;\r\n    public parentTask: string;\r\n    public startDate: Date;\r\n    public endDate: Date;\r\n    public taskId: number;\r\n    public parentTaskId: number;\r\n    public status: string;\r\n  \r\n\r\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AddtaskComponent } from './addtask/addtask.component';\nimport { ViewtaskComponent } from './viewtask/viewtask.component';\nimport { EdittaskComponent } from './edittask/edittask.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst appRoutes: Routes = [\n  { path: 'addtask', component: AddtaskComponent },\n  { path: 'viewtask', component: ViewtaskComponent },\n  { path: 'edittask', component: EdittaskComponent },\n  { path: '',   redirectTo: '/addtask', pathMatch: 'full' },\n  { path: '**', component: PageNotFoundComponent }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(\n      appRoutes,\n      { enableTracing: true } // <-- debugging purposes only\n    )\n  ],\n  exports: [\n    RouterModule\n  ]\n   \n})\nexport class AppRoutingModule { }\n\n\n \n","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n<header>\\n    <nav class=\\\"navbar navbar-default\\\">\\n        <div class=\\\"container-fluid\\\">\\n            <div class=\\\"navbar-header\\\">\\n                <a class=\\\"navbar-brand\\\" routerLink=\\\"/addtask\\\">Task Manager</a>\\n            </div>\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li routerLinkActive=\\\"active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/addtask\\\">Add Task</a></li>\\n                <li routerLinkActive=\\\"active\\\"><a class=\\\"nav-link\\\" routerLink=\\\"/viewtask\\\">View Task</a></li>\\n            </ul>\\n        </div>\\n    </nav>\\n</header>\\n<section>\\n    <router-outlet></router-outlet>\\n</section>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'TaskManager';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule }          from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { AddtaskComponent } from './addtask/addtask.component';\nimport { ViewtaskComponent } from './viewtask/viewtask.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport { TaskService } from './services/task.service';\nimport { StaticTaskService } from './services/static.service';\n\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {TaskPipe} from './viewtask/task.pipe';\nimport { HeaderComponent } from './header/header.component';\nimport { EdittaskComponent } from './edittask/edittask.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AddtaskComponent,\n    ViewtaskComponent,\n    PageNotFoundComponent,\n    TaskPipe,\n    HeaderComponent,\n    EdittaskComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    AppRoutingModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  exports:[TaskPipe],\n  providers: [TaskService, StaticTaskService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"row\\\">\\n          <div class=\\\"col-xs-12\\\">\\n    <form >\\n      <div class=\\\"row\\\">\\n        <label for=\\\"task\\\"  class=\\\"col-md-4\\\" >Task</label>\\n        <input class=\\\"col-md-4\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.task\\\"  name=\\\"task\\\" id=\\\"task\\\" required >\\n      </div>\\n      <br>\\n      <div class=\\\"row\\\">\\n          <label for=\\\"task\\\"  class=\\\"col-md-4\\\" >Priority</label>\\n          <input class=\\\"col-md-4\\\" type=\\\"text\\\"  [(ngModel)]=\\\"task.priority\\\" name=\\\"priority\\\" id=\\\"priority\\\" required>\\n      </div>\\n        <br>\\n      <div class=\\\"row\\\">\\n        <label for=\\\"parentTask\\\" class=\\\"col-md-4\\\" >Parent Task</label>\\n        <input class=\\\"col-md-4\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.parentTask\\\"   name=\\\"parentTask\\\" id=\\\"parentTask\\\" required>\\n      </div>\\n      <br>\\n      <div class=\\\"row\\\">\\n        <label for=\\\"startDate\\\" class=\\\"col-md-4\\\" >Start Date</label>\\n              <input class=\\\"col-md-4\\\" type=\\\"date\\\" [(ngModel)]=\\\"task.startDate\\\"   name=\\\"startDate\\\" id=\\\"startDate\\\" required>\\n     </div>\\n     <br>\\n     <div class=\\\"row\\\">\\n      <label for=\\\"endDate\\\" class=\\\"col-md-4\\\" >End Date</label>\\n      <input class=\\\"col-md-4\\\" type=\\\"date\\\" [(ngModel)]=\\\"task.endDate\\\"   name=\\\"endDate\\\" id=\\\"endDate\\\" required>\\n   \\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n        \\n      <div class=\\\"col-md-6\\\">\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" (click)=\\\"updateTask(task)\\\">Update Task</button>  \\n      </div>\\n  \\n      <div class=\\\"col-md-1\\\">\\n      <button type=\\\"cancel\\\" routerLink=\\\"/viewtask\\\" class=\\\"btn btn-primary\\\">Cancel</button>\\n    </div>\\n    </div>\\n      <br>\\n    </form>\\n    </div>\\n    </div>\\n  </div>\\n  </div>\\n  </div>\\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport {TaskService} from '../services/task.service';\nimport { StaticTaskService } from '../services/static.service';\nimport { Task } from '../addtask/task';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-edittask',\n  templateUrl: './edittask.component.html'\n})\nexport class EdittaskComponent implements OnInit {\n  task: Task = new Task();\n  //editTask: any= {};\n  constructor(private router: Router,private taskervice: TaskService, private staticTaskService: StaticTaskService) {\n  }\n\n  ngOnInit() {\n    this.task = this.staticTaskService.editTask;\n  }\n\n  updateTask(task,taskId): void {\n    console.log(task.task+task.taskId);\n  this.taskervice.updateTask(task,task.taskId)\n    .subscribe( data => {\n \n     },\n      error => {\n        \n     });\n     this.router.navigate(['/viewtask']);\n};\n\n}\n","module.exports = \"<div class=\\\"container\\\">\\n<nav class=\\\"navbar navbar-dark bg-primary\\\">\\n            <a href=\\\"/\\\">Add Task</a>\\n            <a href=\\\"/list\\\">View Task</a>\\n  \\n</nav>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  page-not-found works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html'\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class StaticTaskService {\r\n\r\n    editTask: any = {};\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { Task } from '../addtask/task';\r\n\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\r\n};\r\n\r\n@Injectable()\r\nexport class TaskService {\r\n  //private userUrl = 'http://localhost:8080/user-portal/user';\r\n  private userUrl = 'http://localhost:8090';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public addTask(task) {\r\n    return this.http.post<Task>(this.userUrl+'/addTask', task);\r\n  }\r\n\r\n  public viewTask() {\r\n    return this.http.get<Task[]>(this.userUrl+'/viewTask');\r\n  }\r\n  public updateTask(task,taskId){\r\nconsole.log(taskId+ task);\r\nreturn this.http.post<string>(this.userUrl+'/editTask/'+taskId,task);\r\n  }\r\n\r\n  public endTask(taskId){\r\n    console.log(taskId);\r\n    return this.http.get<Task[]>(this.userUrl+'/deleteTask/'+taskId);\r\n      }\r\n  /* addTask(task, parentTask,startDate,endDate) {\r\n    const uri = 'http://localhost:4000/task/add';\r\n    const obj = {\r\n      task: name,\r\n      parentTask: parentTask,\r\n      startDate:startDate,\r\n      endDate:endDate\r\n\r\n    };\r\n    this.http.post(uri, obj)\r\n        .subscribe(res => console.log('Done'));\r\n  } */\r\n}","import {Pipe, PipeTransform,Injectable } from '@angular/core';\r\nimport {DatePipe} from '@angular/common';\r\nimport {Task} from '../addtask/task';\r\n\r\n@Pipe({name:'filter'})\r\n@Injectable()\r\nexport class TaskPipe implements PipeTransform{\r\n    transform(taskList:Task[],field:string,value:string): Task[] {\r\n       console.log(field + \"value --->\"+value)\r\n    if (!taskList) {\r\n        return [];\r\n    }\r\n    if (!field || !value) {\r\n        return taskList;\r\n    }\r\n  \r\n    if(value === \"\"){\r\n        return taskList;\r\n    }else{\r\n        if(field==\"task\"){\r\n            return taskList.filter(singleTask =>\r\n            singleTask.task.includes(value)\r\n            ); \r\n        }else if(field==\"parentTask\"){\r\n            return taskList.filter(singleTask =>\r\n                singleTask.parentTask.includes(value)\r\n                );\r\n        }\r\n        else if(field==\"priorityFrom\"){\r\n            return taskList.filter(singleTask => singleTask.priority >= parseInt(value)\r\n                );\r\n        }\r\n        else if(field==\"priorityTo\"){\r\n            return taskList.filter(singleTask => singleTask.priority <= parseInt(value));\r\n        }\r\n        else if(field==\"startDate\"){\r\n            return taskList.filter( singleTask => {\r\n                var datePipe = new DatePipe('en-US');\r\n                let str = datePipe.transform(singleTask.startDate,'dd-MM-yyyy');\r\n               if(str.includes(value)){\r\n                    return singleTask;\r\n                }else{\r\n                    return null;\r\n                }\r\n                \r\n            });\r\n        }\r\n        else if(field==\"endDate\"){\r\n            return taskList.filter(singleTask => {\r\n                var datePipe = new DatePipe('en-US');\r\n                let str = datePipe.transform(singleTask.endDate,'dd-MM-yyyy');\r\n               if(str.includes(value)){\r\n                    return singleTask;\r\n                }else{\r\n                    return null;\r\n                }\r\n                \r\n            });\r\n               \r\n        }\r\n    \r\n}\r\n     \r\n}\r\n}","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n<div class=\\\"col-md-12\\\">\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-12\\\">\\n            <div class=\\\"row form-group\\\">\\n                <label class=\\\"col-md-1\\\" for=\\\"task\\\">Task</label>\\n                <input class=\\\"col-md-3\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.task\\\" name=\\\"task\\\">\\n                <label class=\\\"col-md-2\\\" for=\\\"parentTask\\\">Parent Task</label>\\n                <input class=\\\"col-md-3\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.parentTask\\\" name=\\\"parentTask\\\" >\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n            <div class=\\\"col-xs-12\\\">\\n                <div class=\\\"row form-group\\\">\\n                    <label for=\\\"priority\\\"  class=\\\"col-md-1\\\" >Priority From</label>\\n                    <input class=\\\"col-md-1\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.priorityFrom\\\" name=\\\"priorityFrom\\\" >\\n                    <label for=\\\"parent\\\"  class=\\\"col-md-1\\\" >Priority To</label>\\n                    <input class=\\\"col-md-1\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.priorityTo\\\" name=\\\"priorityTo\\\"  >\\n                    <label class=\\\"col-md-2\\\" for=\\\"startDate\\\" >Start Date</label>\\n                    <input class=\\\"col-md-2\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.startDate\\\" name=\\\"startDate\\\"  >\\n                    <label class=\\\"col-md-2\\\" for=\\\"endDate\\\" >End Date</label>\\n                    <input class=\\\"col-md-2\\\" type=\\\"text\\\" [(ngModel)]=\\\"task.endDate\\\"  name=\\\"endDate\\\"  >\\n                </div>\\n            </div>\\n        </div>\\n</div>\\n</div><hr>\\n<div>\\n    <table>\\n        <tbody *ngFor=\\\"let task of taskList | filter : 'task' : task.task | filter : 'parentTask' : task.parentTask  \\n        | filter : 'priorityFrom' : task.priorityFrom | filter : 'priorityTo' : task.priorityTo\\n        | filter : 'startDate' : task.startDate | filter : 'endDate' : task.endDate ; let i = index\\\">\\n            <tr>\\n                <th>Task</th>\\n                <th>Parent</th>\\n                <th>Priority</th>\\n                <th>Start</th>\\n                <th>End</th>\\n                <th></th>\\n                <th></th>\\n            </tr>\\n            <tr>\\n                <td>{{task.task}}</td>\\n                <td>{{task.parentTask}}</td>\\n                <td>{{task.priority}}</td>\\n                <td>{{task.startDate | date:'dd-MM-yyyy'}}</td>\\n                <td>{{task.endDate  | date:'dd-MM-yyyy'}}</td>\\n                <td><button type=\\\"button\\\" (click)=\\\"editTask(task)\\\" class=\\\"btn btn-secondary\\\" [disabled]=\\\"task.status !== 'active'\\\">Edit</button>&nbsp;&nbsp;</td>\\n                <td><button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"endTask(task)\\\" [disabled]=\\\"task.status !== 'active'\\\">End Task</button> </td>\\n            </tr>\\n        </tbody>\\n    </table>\\n<!-- <div class=\\\"row\\\">\\n       \\n          <label class=\\\"col-md-2\\\" style=\\\"margin-bottom: 10px;\\\">Task</label>\\n          <label class=\\\"col-md-2\\\" style=\\\"margin-bottom: 10px;\\\">Parent</label>\\n          <label class=\\\"col-md-1\\\" style=\\\"margin-bottom: 10px;\\\">Priority</label>\\n          <label class=\\\"col-md-2\\\" style=\\\"margin-bottom: 10px;\\\">Start</label>\\n          <label class=\\\"col-md-2\\\" style=\\\"margin-bottom: 10px;\\\">End</label>\\n       \\n</div>\\n<div class=\\\"row\\\">\\n        <div class=\\\"col-md-2\\\" style=\\\"background-color: lightgray;height: 55px;text-align: center;padding-top: 15px;margin-right: 10px;\\\">{{task.task}}</div>\\n        <div class=\\\"col-md-2\\\" style=\\\"background-color: lightgray;height: 55px;text-align: center;padding-top: 15px;margin-right: 10px;\\\">{{task.parentTask}}</div>\\n        <div class=\\\"col-md-1\\\" style=\\\"text-align: left;\\\">{{task.priority}}</div>\\n        <div class=\\\"col-md-2\\\" style=\\\"text-align: left;\\\">{{task.startDate | date:'dd-MM-yyyy'}}</div>\\n        <div class=\\\"col-md-2\\\" style=\\\"text-align: left;\\\">{{task.endDate  | date:'dd-MM-yyyy'}}</div>\\n        <div class=\\\"col-md-3\\\" *ngIf=\\\"task.status === 'active'\\\">\\n        <button type=\\\"button\\\" (click)=\\\"editTask(task)\\\" class=\\\"btn btn-secondary\\\" >Edit</button>&nbsp;&nbsp;\\n        <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"endTask(task)\\\">End Task</button> \\n        </div>\\n</div>                 -->\\n\\n</div>\\n    <router-outlet></router-outlet>\\n</div>\\n\\n\\n\"","import { Component, OnInit,Pipe, PipeTransform } from '@angular/core';\nimport {TaskService} from '../services/task.service';\nimport { Task } from '../addtask/task';\nimport { Router } from '@angular/router';\nimport { StaticTaskService } from '../services/static.service';\n\n@Component({\n  selector: 'app-viewtask',\n  templateUrl: './viewtask.component.html'\n})\n \nexport class ViewtaskComponent implements OnInit{\n \n\n  task: Task = new Task();\n  taskList: any[] = [];\n  constructor(private router: Router,private taskervice: TaskService, private staticTaskService: StaticTaskService) {\n  }\n   \n\n  viewTask(): void {\n   this.taskervice.viewTask()\n       .subscribe( data => {\n         this.taskList = data;\n       },\n       error => {\n       // alert(\"ERROR\");\n      });\n\n\n };\n\n\neditTask(task : any){\n  this.staticTaskService.editTask = task;\n  this.router.navigate(['/edittask']);\n  \n}\n\nendTask(task : any){\n  this.taskervice.endTask(task.taskId)\n  .subscribe( data => {\n    this.taskList = data;\n  },error => {\n     alert(\"ERROR\");\n   });\n  \n}\n\n /*addTask(task, parentTask,startDate, endDate) {\n   this.taskervice.addTask(task,parentTask,startDate,endDate);\n }*/\n ngOnInit() {\n  this.viewTask();\n }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}